{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Hatice/Desktop/ikt/semesteraufgabe/PWA/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../backend.service\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\n\nfunction CreateComponent_mat_error_9_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, CreateComponent_mat_error_9_span_1_Template, 2, 0, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.inp_title.errors == null ? null : ctx_r0.inp_title.errors.required);\n  }\n}\n\nfunction CreateComponent_mat_error_14_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, CreateComponent_mat_error_14_span_1_Template, 2, 0, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.inp_location.errors == null ? null : ctx_r1.inp_location.errors.required);\n  }\n}\n\nexport class CreateComponent {\n  constructor(fb, bs) {\n    this.fb = fb;\n    this.bs = bs; // constructor function\n  }\n\n  ngOnInit() {\n    this.formGroup = this.fb.group({\n      inp_title: ['', Validators.required],\n      inp_location: ['', Validators.required],\n      inp_image: ['', Validators.required]\n    });\n  }\n\n  get inp_title() {\n    return this.formGroup.get('inp_title');\n  }\n\n  get inp_location() {\n    return this.formGroup.get('inp_location');\n  }\n\n  get inp_image() {\n    return this.formGroup.get('inp_image');\n  }\n\n  onSubmit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const post = {\n        id: null,\n        title: _this.inp_title.value,\n        location: _this.inp_location.value,\n        image: _this.imageBase64\n      };\n      console.log('post : ', post);\n      yield _this.bs.addPost(post);\n    })();\n  }\n\n  uploadFileEvt(imgFile) {\n    console.log('upload', imgFile.target.files);\n\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      const reader = new FileReader();\n\n      reader.onload = e => {\n        const image = new Image();\n        image.src = e.target.result;\n\n        image.onload = () => {\n          // Return Base64 Data URL\n          const imgBase64Path = e.target.result;\n          console.log('base64', imgBase64Path);\n          this.imageBase64 = imgBase64Path.substr(imgBase64Path.indexOf(',') + 1);\n        };\n      };\n\n      reader.readAsDataURL(imgFile.target.files[0]);\n    }\n  }\n\n}\n\nCreateComponent.ɵfac = function CreateComponent_Factory(t) {\n  return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.BackendService));\n};\n\nCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateComponent,\n  selectors: [[\"app-create\"]],\n  decls: 20,\n  vars: 4,\n  consts: [[\"novalidate\", \"\", 1, \"container\"], [1, \"form-container\"], [3, \"formGroup\"], [\"appearance\", \"standard\", 1, \"form-field\"], [\"matInput\", \"\", \"placeholder\", \"Titel\", \"formControlName\", \"inp_title\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Location\", \"formControlName\", \"inp_location\"], [\"appearance\", \"standard\", 1, \"form-field\", \"inputbreit\"], [\"matInput\", \"\", \"readonly\", \"\", \"id\", \"file_name\", \"placeholder\", \"Browse image file\"], [\"type\", \"file\", \"id\", \"fileUpload\", \"formControlName\", \"inp_image\", \"multiple\", \"multiple\", \"accept\", \"image/*\", 3, \"change\"], [\"mat-stroked-button\", \"\", \"color\", \"default\", 1, \"button\", 3, \"disabled\", \"click\"]],\n  template: function CreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Post hinzuf\\u00FCgen\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵelementStart(5, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Post title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵtemplate(9, CreateComponent_mat_error_9_Template, 2, 1, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(11, \"mat-label\");\n      i0.ɵɵtext(12, \"Post location\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6);\n      i0.ɵɵtemplate(14, CreateComponent_mat_error_14_Template, 2, 1, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"mat-form-field\", 7);\n      i0.ɵɵelement(16, \"input\", 8);\n      i0.ɵɵelementStart(17, \"input\", 9);\n      i0.ɵɵlistener(\"change\", function CreateComponent_Template_input_change_17_listener($event) {\n        return ctx.uploadFileEvt($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function CreateComponent_Template_button_click_18_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(19, \" Add post \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", !ctx.inp_title.valid && ctx.inp_title.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", !ctx.inp_location.valid && ctx.inp_location.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.formGroup.valid);\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i3.MatFormField, i3.MatLabel, i4.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i5.NgIf, i6.MatButton, i3.MatError],\n  styles: [\".vertikal[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: flex-start;\\r\\n  margin: 1%;\\r\\n}\\r\\n\\r\\n.formbreit[_ngcontent-%COMP%] {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.inputbreit[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n#fileUpload[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  z-index: 9;\\r\\n  opacity: 0;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  left: 0px;\\r\\n  top: 0px;\\r\\n  cursor: pointer;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIsVUFBVTtBQUNaOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLFVBQVU7RUFDVixZQUFZO0VBQ1osV0FBVztFQUNYLFNBQVM7RUFDVCxRQUFRO0VBQ1IsZUFBZTtBQUNqQiIsImZpbGUiOiJjcmVhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi52ZXJ0aWthbCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gIG1hcmdpbjogMSU7XHJcbn1cclxuXHJcbi5mb3JtYnJlaXQge1xyXG4gIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmlucHV0YnJlaXQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4jZmlsZVVwbG9hZCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHotaW5kZXg6IDk7XHJcbiAgb3BhY2l0eTogMDtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbGVmdDogMHB4O1xyXG4gIHRvcDogMHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\Hatice\\Desktop\\ikt\\semesteraufgabe\\PWA\\frontend\\src\\app\\create\\create.component.ts","C:\\Users\\Hatice\\Desktop\\ikt\\semesteraufgabe\\PWA\\frontend\\src\\app\\create\\create.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport { BackendService } from '../backend.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  formGroup!: FormGroup;\n  imageBase64!: '' ;\n\n  constructor(private fb: FormBuilder, private bs: BackendService,) {\n    // constructor function\n  }\n\n  ngOnInit(): void {\n    this.formGroup = this.fb.group({\n      inp_title: ['', Validators.required],\n      inp_location: ['', Validators.required],\n      inp_image: ['', Validators.required]\n    });\n  }\n\n  get inp_title(): FormControl {\n    return this.formGroup.get('inp_title') as FormControl;\n  }\n\n  get inp_location(): FormControl {\n    return this.formGroup.get('inp_location') as FormControl;\n  }\n\n  get inp_image(): FormControl {\n    return this.formGroup.get('inp_image') as FormControl;\n  }\n\n  async onSubmit(): void {\n    const post = {\n      id: null,\n      title: this.inp_title.value,\n      location: this.inp_location.value,\n      image: this.imageBase64\n    }\n    console.log('post : ', post);\n    await this.bs.addPost(post);\n  }\n\n  uploadFileEvt(imgFile: any): void {\n    console.log('upload', imgFile.target.files);\n    if (imgFile.target.files && imgFile.target.files[0]) {\n\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        const image = new Image();\n        image.src = e.target.result;\n        image.onload = () => {\n\n          // Return Base64 Data URL\n          const imgBase64Path = e.target.result;\n          console.log('base64', imgBase64Path);\n          this.imageBase64 = imgBase64Path.substr(imgBase64Path.indexOf(',') + 1);\n\n        };\n      };\n      reader.readAsDataURL(imgFile.target.files[0]);\n\n    }\n  }\n\n}\n","<div class=\"container\" novalidate>\n  <div class=\"form-container\">\n    <h3>Post hinzufügen</h3>\n    <form [formGroup]=\"formGroup\">\n\n      <mat-form-field class=\"form-field\" appearance=\"standard\">\n        <mat-label>Post title</mat-label>\n        <input matInput placeholder=\"Titel\" formControlName=\"inp_title\" />\n        <mat-error *ngIf=\"!inp_title.valid && inp_title.touched\">\n          <span *ngIf=\"inp_title.errors?.required\">This field is mandatory.</span>\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"form-field\" appearance=\"standard\">\n        <mat-label>Post location</mat-label>\n        <input matInput placeholder=\"Location\" formControlName=\"inp_location\" />\n        <mat-error *ngIf=\"!inp_location.valid && inp_location.touched\">\n          <span *ngIf=\"inp_location.errors?.required\">This field is mandatory.</span>\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"form-field inputbreit\" appearance=\"standard\">\n        <!-- Readonly Input to show File names -->\n        <input matInput readonly id=\"file_name\" placeholder=\"Browse image file\" />\n\n        <!-- Fetch selected filed on change -->\n        <input type=\"file\" id=\"fileUpload\" (change)=\"uploadFileEvt($event)\" formControlName=\"inp_image\" multiple=\"multiple\" accept=\"image/*\" />\n      </mat-form-field>\n\n    </form>\n    <button mat-stroked-button (click)=\"onSubmit()\" color=\"default\" class=\"button\" [disabled]=\"!formGroup.valid\">\n      Add post\n    </button>\n  </div>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}